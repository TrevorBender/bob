variables:
  helloworld: Hello World!
build:
  all:
    input: ./main1.go
    cmd: go build -o run
    dependson:
      - second-level/build2
      - second-level/third-level/print
    environment: ""
    target: run
    exports: {}
    rebuild: on-change
  always-build:
    input: |-
      ./main1.go
      go.mod
    cmd: go build -o run
    dependson: []
    environment: ""
    target: run
    exports: {}
    rebuild: always
  build:
    input: |-
      ./main1.go
      go.mod
    cmd: go build -o run
    dependson: []
    environment: ""
    target: run
    exports: {}
    rebuild: on-change
  docker-image:
    input: ""
    cmd: docker build -t bob/testimage:latest .
    dependson: []
    environment: ""
    target:
      image: bob/testimage:latest
    exports: {}
  docker-image-plus:
    input: ""
    cmd: docker build -f Dockerfile.plus -t bob/testimage/plus:latest .
    dependson: []
    environment: ""
    target:
      image: bob/testimage/plus:latest
    exports: {}
  generate:
    input: openapi.yaml
    cmd: |-
      mkdir -p rest-server/generated
      oapi-codegen -package generated -generate server \
      	${OPENAPI_PROVIDER_PROJECT_OPENAPI_OPENAPI} \
      		> rest-server/generated/server.gen.go
      oapi-codegen -package generated -generate types \
      	${OPENAPI_PROVIDER_PROJECT_OPENAPI_OPENAPI} \
      		> rest-server/generated/types.gen.go
      oapi-codegen -package generated -generate client \
      	${OPENAPI_PROVIDER_PROJECT_OPENAPI_OPENAPI} \
      		> rest-server/generated/client.gen.go
    dependson:
      - openapi-provider-project/openapi
    environment: ""
    target: |-
      rest-server/generated/server.gen.go
      rest-server/generated/types.gen.go
      rest-server/generated/client.gen.go
    exports: {}
  ignoredInputs:
    input: |-
      fileToWatch
      !fileToIgnore
    cmd: echo "Hello from ignored inputs task"
    dependson: []
    environment: ""
    exports: {}
  multilinetouch:
    input: ""
    cmd: |-
      mkdir -p \
      multilinetouch
      touch \
      	multilinefile1 \
      	multilinefile2 \
      		multilinefile3 \
              multilinefile4
      touch \
        multilinefile5
    dependson: []
    environment: ""
    exports: {}
  print:
    input: ""
    cmd: echo ${HELLOWORLD}
    dependson: []
    environment: ""
    exports: {}
  slow:
    input: ""
    cmd: |-
      sleep 2
      touch slowdone
    dependson: []
    environment: ""
    target: slowdone
    exports: {}
  targetwithdirs:
    input: ""
    cmd: |-
      mkdir -p .bbuild/dirone/dirtwo
      touch .bbuild/dirone/fileone
      touch .bbuild/dirone/filetwo
      touch .bbuild/dirone/dirtwo/fileone
      touch .bbuild/dirone/dirtwo/filetwo
    dependson: []
    environment: ""
    target: .bbuild/dirone/
    exports: {}
  run-hello:
    cmd: go version
  run-npm:
    cmd: npm run build
    dependencies:
      - nodePackages.npm
run:
  binary:
    type: binary
    path: ./run
    dependson:
      - all
      - environment
  environment:
    type: compose
    path: ""
    dependson: []
  whoami:
    type: compose
    path: docker-compose.whoami.yml
    dependson:
      - all
      - environment
dependencies:
    - git
    - go_1_16
use-nix: true
